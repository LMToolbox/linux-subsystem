name: Build (Alpine) rootfs

on:
  workflow_dispatch:

env:
  ALPINE_TAG: "3.22.1"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: x86_64
            platform: linux/amd64
          - arch: aarch64
            platform: linux/arm64/v8
          - arch: arm
            platform: linux/arm/v7

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up QEMU for cross-arch Docker
        uses: docker/setup-qemu-action@v3

      - name: Build Alpine rootfs for ${{ matrix.arch }}
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.arch }}
        run: |
          set -e
          mkdir -p out

          # Read packages from pkgs.txt, ignore comments and empty lines, convert newlines to spaces
          PKGS=$(grep -Ev '^\s*#|^\s*$' pkgs.txt | tr '\n' ' ')
          echo "==> Packages to install:"
          echo "$PKGS"

          docker run --platform "$PLATFORM" -e PKGS="$PKGS" --name rootfs alpine:"${ALPINE_TAG}" sh -euxc "
            apk update --no-cache
            if [ -n \"$PKGS\" ]; then
              apk add --no-cache $PKGS
            fi
            rm -rf /var/cache/apk/* /usr/share/man /usr/share/doc /usr/share/locale
            rm -rf /etc/ssh/ssh_host_* /etc/machine-id
            rm -rf /tmp/* /var/tmp/* /run/* /var/run/*
            mkdir -p /proc /sys /dev
          "
          docker export rootfs | gzip -c > "out/alpine-rootfs-${ARCH}.tar.gz"

      - name: Upload rootfs
        uses: actions/upload-artifact@v4
        with:
          name: alpine-rootfs-${{ matrix.arch }}
          path: out/alpine-rootfs-${{ matrix.arch }}.tar.gz